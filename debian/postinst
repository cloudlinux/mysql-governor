#!/bin/sh
# postinst script for governor-mysql
#
# see: dh_installdeb(1)

set -e

. /usr/share/debconf/confmodule

db_get governor-mysql/g_key_library
gKEY="$RET"

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


do_install_or_upgrade() {

    [ -d /var/lve/dbgovernor-shm ] || mkdir -p /var/lve/dbgovernor-shm
    mount | grep -q /var/lve/dbgovernor-shm || mount -t tmpfs none /var/lve/dbgovernor-shm -o 'rw,nosuid,nodev'

# XXX This is CL version, it should be rewritten or removed
#    if [ -e "/usr/share/lve/dbgovernor/mysqlgovernor.py" ]; then
#        /usr/share/lve/dbgovernor/mysqlgovernor.py --fs-suid
#    fi

    systemctl daemon-reload >/dev/null 2>&1 || :

    # Weird, Debian cannot distinguish between post-install and post-upgrade...
    # Ensure autostart for db_governor service (on install, not upgrade)
    systemctl enable db_governor >/dev/null 2>&1 || :

    [ -e /dev/shm/governor_bad_users_list ] && rm /dev/shm/governor_bad_users_list 2>&1 >/dev/null || :

}

start_mysql_service() {
            if [ -e /usr/lib/systemd/system/mysql.service -a -e /usr/bin/systemctl ]; then
                systemctl status mysql.service
                if [ "$?" != "0" ]; then
                    systemctl start mysql.service
                else
                    echo "MySQL already started"
                fi
            elif [ -e /usr/lib/systemd/system/mysqld.service -a -e /usr/bin/systemctl ]; then
                systemctl status mysqld.service
                if [ "$?" != "0" ]; then
                    systemctl start mysqld.service
                else
                    echo "MySQL already started"
                fi
            elif [ -e /usr/lib/systemd/system/mariadb.service -a -e /usr/bin/systemctl ]; then
                systemctl status mariadb.service
                if [ "$?" != "0" ]; then
                    systemctl start mariadb.service
                else
                    echo "MySQL already started"
                fi
            elif [ -e /etc/init.d/mysql ]; then
                /etc/init.d/mysql status
                if [ "$?" != "0" ]; then
                    /etc/init.d/mysql start
                else
                    echo "MySQL already started"
                fi
            elif [ -e /etc/init.d/mysqld ]; then
                /etc/init.d/mysqld status
                if [ "$?" != "0" ]; then
                    /etc/init.d/mysqld start
                else
                    echo "MySQL already started"
                fi
            fi
}


do_posttrans() {

# do we need it on Ubuntu?
#rm -rf /%{_libdir}/liblve.so.1
#ln -s /%{_libdir}/liblve.so.0.9.0 /%{_libdir}/liblve.so.1

/sbin/ldconfig

# XXX This is CL version, it should be rewritten or removed
#if [ -e /usr/share/lve/dbgovernor/mysqlgovernor.py ]; then
#    /usr/share/lve/dbgovernor/mysqlgovernor.py --correct-cloud-version
#fi

#check if in signal file saved U, than need to start mysql
if [ -e "/etc/container/dbgovernor-libcheck" ]; then
    rKEY=`cat /etc/container/dbgovernor-libcheck | tr -d '\n'`
        if [ "$rKEY" = "U" ]; then
            echo "Start MySQL for safe installation"
            start_mysql_service
        fi
fi

/sbin/ldconfig

#if [ -e /usr/share/lve/dbgovernor/mysqlgovernor.py ]; then
#    if [ ! -e /usr/share/lve/dbgovernor/MYSQLG-178 ]; then
#        /usr/share/lve/dbgovernor/mysqlgovernor.py --fix-config
#        touch /usr/share/lve/dbgovernor/MYSQLG-178
#    fi
#fi

/usr/share/lve/dbgovernor/mysqlgovernor.py --update-cpanel-hooks

/bin/systemctl daemon-reload >/dev/null 2>&1 || :
/bin/systemctl enable var-lve-dbgovernor\\x2dshm.mount >/dev/null 2>&1 || :
/bin/systemctl restart db_governor.service >/dev/null 2>&1 || :

if [ ! -e /usr/share/lve/dbgovernor/vectors_are_already_present ]; then
    /usr/share/lve/dbgovernor/creates_individual_limits_vector_list.py
    touch /usr/share/lve/dbgovernor/vectors_are_already_present
fi

echo "Run script: /usr/share/lve/dbgovernor/mysqlgovernor.py --install"
echo "!!!Before making any changing with database make sure that you have reserve copy of users data!!!"
echo "Instruction: how to create whole database backup - http://docs.cloudlinux.com/index.html?backing_up_mysql.html"

}

case "$1" in
    configure)
        do_install_or_upgrade
        # Weird, Debian does not have posttrans stage...
        do_posttrans
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
